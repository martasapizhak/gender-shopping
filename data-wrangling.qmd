---
title: "Shopping Trends Gender Analysis"
author: "Marta Sapizhak"
format: pdf
---

```{r load_lib}
#| message: false
#| warning: false
#| include: false
#| echo: false

# Loading necessary packages
library(tidyverse)    # for data manipulation and visualization
library(broom)        # for using augment
library(car)          # for calculating VIF
library(pROC)         # for ROC analysis
```

```{r load_data}
#| message: false
#| warning: false
#| echo: true

# Load raw data
shopping_raw <- read_csv("shopping_trends.csv")

# Display initial data
head(shopping_raw)
```

```{r create_outcome}
#| message: false
#| warning: false
#| echo: true

# Create binary outcome for gender prediction
shopping_with_outcome <- shopping_raw |>
  mutate(gender_binary = ifelse(Gender == "Female", 1, 0))
```

```{r variable_distributions}
#| message: false 
#| warning: false
#| echo: true

# Select key variables
vars_to_plot <- c("Age", "Purchase Amount (USD)", "Review Rating", "Previous Purchases")

# Create histogram for each variable using ggplot2
for (var in vars_to_plot) {
  p <- ggplot(shopping_raw, aes(x = .data[[var]])) +
    geom_histogram(bins = 30, fill = "skyblue", color = "black") +
    labs(title = paste("Histogram of", var),
         x = var,
         y = "Frequency")
  
  print(p)
}

```

```{r gender_models}
#| message: false
#| warning: false
#| echo: true

# Full model with all potential predictors
gender_full_model <- glm(gender_binary ~ 
                     `Discount Applied` +
                     `Promo Code Used` +
                     `Subscription Status` +
                     Location +
                     `Item Purchased` +
                     Color +
                     `Shipping Type`,
                     family = binomial(link = "logit"),
                     data = shopping_with_outcome)

# Perform stepwise selection
gender_stepwise_model <- step(gender_full_model, direction = "both", trace = 0)

# Get predictions using augment
gender_stepwise_predictions <- augment(gender_stepwise_model, type.predict = "response")

# Calculate ROC and AUC for stepwise model
gender_roc_stepwise <- roc(shopping_with_outcome$gender_binary, gender_stepwise_predictions$.fitted)
gender_auc_stepwise <- auc(gender_roc_stepwise)

# Plot ROC curve using ggplot2
ggroc(gender_roc_stepwise) +
  geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
  labs(title = paste("Gender Prediction ROC Curve (AUC =", round(gender_auc_stepwise, 3), ")"),
       x = "1 - Specificity (False Positive Rate)",
       y = "Sensitivity (True Positive Rate)")

# Look at coefficients of significant predictors
gender_coef_summary <- tidy(gender_stepwise_model) |>
  mutate(
    odds_ratio = exp(estimate),
    ci_lower = exp(estimate - 1.96 * std.error),
    ci_upper = exp(estimate + 1.96 * std.error)
  ) |>
  arrange(p.value)

gender_coef_summary
# Display significant coefficients

gender_coef_summary 
  #filter(p_value < 0.05) |>
  #select(variable, coefficient, odds_ratio, ci_lower, p_value)
```

```{r interaction_model}
#| message: false
#| warning: false
#| echo: true

# Fit interaction model for gender prediction
gender_interaction_model <- glm(gender_binary ~ 
                           `Discount Applied`*`Shipping Type`,
                           family = binomial(link = "logit"),
                           data = shopping_with_outcome)

# Get predictions for interaction model
gender_interaction_predictions <- augment(gender_interaction_model, type.predict = "response")

# Calculate ROC and metrics for interaction model
gender_roc_interaction <- roc(shopping_with_outcome$gender_binary, gender_interaction_predictions$.fitted)
gender_auc_interaction <- auc(gender_roc_interaction)

# Calculate CIs for both models
gender_ci_stepwise <- ci.auc(gender_roc_stepwise)
gender_ci_interaction <- ci.auc(gender_roc_interaction)

# Compare models comprehensively
model_comparison <- tibble(
  Metric = c("AUC", "95% CI Lower", "95% CI Upper"),
  Stepwise = c(gender_auc_stepwise, gender_ci_stepwise[1], gender_ci_stepwise[3]),
  Interaction = c(gender_auc_interaction, gender_ci_interaction[1], gender_ci_interaction[3])
)

# Display model comparison
model_comparison


# Plot ROC curves for both models using ggplot2
ggroc(list(Stepwise = gender_roc_stepwise, Interaction = gender_roc_interaction)) +
  geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray") +
  labs(title = "Gender Prediction ROC Curves Comparison",
       x = "1 - Specificity (False Positive Rate)", 
       y = "Sensitivity (True Positive Rate)") +
  scale_color_manual(values = c("Stepwise" = "blue", "Interaction" = "red"))

# Calculate metrics for stepwise model
stepwise_metrics <- gender_stepwise_predictions |>
  mutate(predicted = if_else(.fitted > 0.5, 1, 0)) |>
  summarize(
    Sensitivity = sum(predicted == 1 & gender_binary == 1) / sum(gender_binary == 1),
    Specificity = sum(predicted == 0 & gender_binary == 0) / sum(gender_binary == 0),
    Accuracy = sum(predicted == gender_binary) / n(),
    Odds = Sensitivity / (1 - Specificity),
    `Odds Ratio` = 1
  )

interaction_metrics <- gender_interaction_predictions |>
  mutate(predicted = if_else(.fitted > 0.5, 1, 0)) |>
  summarize(
    Sensitivity = sum(predicted == 1 & gender_binary == 1) / sum(gender_binary == 1),
    Specificity = sum(predicted == 0 & gender_binary == 0) / sum(gender_binary == 0),
    Accuracy = sum(predicted == gender_binary) / n(),
    Odds = Sensitivity / (1 - Specificity),
    `Odds Ratio` = Odds / stepwise_metrics$Odds
  )

# Combine metrics into a single table
metrics_table <- bind_rows(
  stepwise_metrics |> mutate(Model = "Stepwise"),
  interaction_metrics |> mutate(Model = "Interaction")
)

# Display the metrics table
metrics_table

print(gender_interaction_model)


print(gender_stepwise_model)

```